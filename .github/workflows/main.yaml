name: Terraform Plan & Deploy Pipeline
on:
  push:
    branches: [main, gui]
  pull_request:
    branches: [main, gui]
jobs:
  terraform-and-ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Restaurar credentials.json
        run: |
          echo "${{ secrets.GCP_CREDENTIALS_B64 }}" | base64 -d > ./terraform/credentials.json

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="commit_id=${GITHUB_SHA}"
        working-directory: ./terraform

      - name: Instalar Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Configurar SSH para Ansible
        run: |
          mkdir -p ansible
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ansible/ssh_key
          chmod 600 ansible/ssh_key

      - name: Atualizar inventory com IP da VM
        run: |
          VM_IP=$(terraform output -raw instance_ip)
          echo "[vm]\n$VM_IP ansible_user=debian ansible_ssh_private_key_file=ssh_key" > ../ansible/hosts.ini
        working-directory: ./terraform

      - name: Executar Ansible Playbook
        run: |
          ansible-playbook -i hosts.ini playbook.yaml
        working-directory: ./ansible

      - name: Mostrar URL do Grafana
        run: |
          VM_IP=$(terraform output -raw instance_ip)
          echo "Grafana disponível em: http://$VM_IP"
        working-directory: ./terraform

      - name: Destroy infrastructure
        if: always()
        run: terraform destroy -auto-approve -var="commit_id=${GITHUB_SHA}"
        working-directory: ./terraform
