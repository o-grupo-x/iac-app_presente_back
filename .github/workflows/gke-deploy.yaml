name: Provision Infrastructure

on:
  push:
    branches: [main, dev]
  pull_request:
    types: [closed]
    branches: [main, dev]

env:
  PROJECT_ID: app-chamada-5706
  REGION: us-central1
  DELETE_OLD_CLUSTERS: "true"

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Short Commit SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var="cluster_name=app-prod-${{ steps.vars.outputs.short_sha }}"

      - name: Delete Old Clusters (Optional)
        if: env.DELETE_OLD_CLUSTERS == 'true'
        run: |
          clusters=$(gcloud container clusters list --format="value(name)")
          for cluster in $clusters; do
            if [[ "$cluster" != "app-prod-${{ steps.vars.outputs.short_sha }}" ]]; then
              echo "Deleting cluster $cluster"
              gcloud container clusters delete $cluster --quiet --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}
            fi
          done

      - name: Verify Cluster
        if: env.DELETE_OLD_CLUSTERS != 'true'
        run: |
          gcloud container clusters describe app-prod-${{ steps.vars.outputs.short_sha }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

  deploy-prometheus:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}


      - name: Get cluster credentials
        run: |
          gcloud container clusters get-credentials app-prod-${{ needs.terraform.outputs.short_sha }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Deploy Prometheus
        run: |
          kubectl apply -f k8s/prometheus.yaml
