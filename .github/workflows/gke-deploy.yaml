name: Build and Deploy

on:
  push:
    branches: [main, dev]
  pull_request:
    types: [closed]
    branches: [main, dev]

env:
  PROJECT_ID: app-chamada-5706

jobs:
  terraform:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_B64 }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

  build-and-deploy:
    needs: terraform
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_B64 }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker -q

      - name: Build image
        run: docker build -t gcr.io/${{ env.PROJECT_ID }}/frontend:${{ github.sha }} .

      - name: Push image
        run: docker push gcr.io/${{ env.PROJECT_ID }}/frontend:${{ github.sha }}

      - name: Get cluster credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ env.PROJECT_ID }}

      - name: Deploy Frontend & Prometheus
        run: |
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl set image deployment/frontend frontend=gcr.io/${{ env.PROJECT_ID }}/frontend:${{ github.sha }}
          kubectl apply -f k8s/prometheus.yaml
